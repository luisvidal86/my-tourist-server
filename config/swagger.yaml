swagger: "2.0"
info:
  version: 1.0.0
  title: Swagger my-tourist-server
  description: A sample API for my-tourist-server

schemes:
  - http
consumes:
  - application/json
  - application/octet-stream
produces:
  - application/json

paths:
  /api:
    x-swagger-router-controller: home
    get:
      summary: It is the home of the API
      description: >
        Returns anything, it is the main entry point for the API
      operationId: getAPI
      tags:
        - home
      responses:
        '200':
          description: Returns anything
  /api/places:
    x-swagger-router-controller: place-controller
    get:
      summary: Retrieves a list of places
      description: >
        This enpoint allows users to retrieve a complete list of places from the server
      operationId: retrievePlaces
      tags:
        - places
      responses:
        '200':
          description: List of places
          schema:
            type: object
            properties:
              data:
                type: array
                $ref: '#/definitions/Place'
    post:
      summary: Adds a new place to our list of places.
      description: >
        This endpoint allows users to upload new places to the server
      operationId: createPlace
      tags:
        - places
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: placeImg
          type: file
          required: true
          description: The file to upload.
        - in: formData
          name: place
          description: a place
          required: true
          type: string
      responses:
        '201':
          description: Place has been added successfully
          schema:
            $ref: '#/definitions/Place'
        '400':
          description: Place is not valid
        '500':
          description: There was an error storing a place
  /api/places/{placeId}:
    x-swagger-router-controller: place-controller
    get:
      summary: Get a place given its ID
      description: >
        This endpoint allows users to find a place given its ID
      operationId: retrieveById
      tags:
        - place
      parameters:
        - in: path
          name: placeId
          description: The place identifier
          type: string
          required: true
      responses:
        '200':
          description: A place given its ID
          schema:
            $ref: '#/definitions/Place'
        '404':
          description: Place not found


definitions:
  Place:
    description: a Place
    required:
      - name
      - description
      - address
      - group
      - tag
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      address:
        type: string
      image:
        type: string
      group:
        type: string
      tag:
        type: string